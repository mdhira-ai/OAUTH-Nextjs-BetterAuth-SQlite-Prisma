import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "./components/Navbar";
import { SocketProvider } from "./lib/socket-context";
import { ToastContainer } from "react-toastify";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  // const { socket } = useSocket();

  // when i get a toast notification from socket "notification", show a toast
  // useEffect(() => {
    
  //   if (socket) {
  //     socket.on("notification", (data: any) => {
  //       const message = `${data.message} from ${data.from}`;
  //       toast.info(message, {
  //         position: "top-right",
  //         autoClose: 5000,
  //         hideProgressBar: false,
  //         closeOnClick: true,
  //         pauseOnHover: true,
  //         draggable: true,
  //         progress: undefined,
  //         theme: "light",
  //       });
  //     });
  //   }
  //   return () => {
  //     if (socket) {
  //       socket.off("notification");
  //     }
  //   };
  // }, [socket]);  



  return (
    <html lang="en" suppressHydrationWarning >
      <body
        suppressHydrationWarning
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SocketProvider 
          serverUrl="https://mysocket-server.onrender.com/" 
          enabled={true} // Disable until you have a socket server running
        >
          <Navbar/>
          <ToastContainer />
          {children}
        </SocketProvider>
      </body>
    </html>
  );
}
